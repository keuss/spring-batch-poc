file.input=coffee-list.csv

# By default use HikariDataSource with pool
# Hikari is a JDBC DataSource implementation that provides a connection pooling mechanism
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout=30000
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=10
#maximum pool size
spring.datasource.hikari.maximum-pool-size=50
#maximum idle time for connection
spring.datasource.hikari.idle-timeout=30000
# maximum lifetime in milliseconds of a connection in the pool after it is closed
spring.datasource.hikari.max-lifetime=1800000
#default auto-commit behavior
spring.datasource.hikari.auto-commit=true

# NO JPA here so need this datasource initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath*:db/my_schema.sql
spring.sql.init.data-locations=classpath:/db/runtime.sql

# Spring Batch jobs will not run when Spring Boot starts
spring.batch.job.enabled=true

spring.batch.job.names=importCoffeeJob,readCoffeeJob

#logging.level.org.springframework.jdbc=DEBUG
#logging.level.org.springframework.batch=DEBUG
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
